# Template file for 'rspamd'
pkgname=rspamd
version=3.7.3
revision=1
archs="x86_64* i686* aarch64* armv[67]* ppc64*"
build_style=cmake
configure_args="-DRSPAMD_USER=rspamd -DCONFDIR=/etc/rspamd
 -DDBDIR=/var/lib/rspamd"
hostmakedepends="perl pkg-config ragel"
makedepends="LuaJIT-devel fann-devel file-devel gd-devel pcre-devel
 hiredis-devel icu-devel libevent-devel sqlite-devel libglib-devel libsodium-devel"
short_desc="Fast, free and open-source spam filtering system"
maintainer="Enno Boland <gottox@voidlinux.org>"
license="Apache-2.0"
homepage="https://rspamd.com/"
changelog="https://raw.githubusercontent.com/rspamd/rspamd/master/ChangeLog"
distfiles="https://github.com/rspamd/rspamd/archive/${version}.tar.gz"
checksum=4dbf64c48c63901a9d15d6c337509c1db7725ab88a7ce03f56eb4e12e3db5e84
system_accounts="rspamd"
rspamd_homedir=/var/lib/rspamd
conf_files="/etc/rspamd/*.conf /etc/rspamd/*.inc /etc/rspamd/modules.d/*.conf"

case "$XBPS_TARGET_MACHINE" in
	aarch64*|arm*) configure_args+=" -DHAS_C11_ATOMICS_EXITCODE=0
	 -DHAS_C11_ATOMICS_EXITCODE__TRYRUN_OUTPUT=0
	 -DHAVE_ATOMIC_BUILTINS_EXITCODE=0
	 -DHAVE_ATOMIC_BUILTINS_EXITCODE__TRYRUN_OUTPUT=0"
esac

if [ "$CROSS_BUILD" ]; then
	hostmakedepends+=" ${makedepends}"

	pre_build() {
		make -C build_native/contrib/snowball
		vsed -e "s#${wrksrc}/build/contrib/snowball/snowball#${wrksrc}/build_native/contrib/snowball/snowball#g" \
			-i build/build.ninja
	}
fi

pre_configure() {
	# cmake will pick up gold which may not be available on the target arch
	# since there is no real reason to use it, just skip the attempt to detect it (which
	# may pick up the host ld.gold while configuring cross compiling)
	vsed -i cmake/Toolset.cmake -e '/find_program(GOLD_PATH NAMES "ld.gold" "gold")/d'

	if [ "$CROSS_BUILD" ]; then
		# for building contrib/snowball:
		configure_args+=" -C ${FILESDIR}/TryRunResults.cmake"
		mkdir -p build_native
		( cd build_native; env -i PATH=$PATH cmake .. )
	fi
}

post_install() {
	vsv rspamd
}
